***** case 1.in ***** pass
Module(body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Num(n=5)], keywords=[], starargs=None, kwargs=None), body=[Print(dest=None, values=[Name(id='i', ctx=Load())], nl=True), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Num(n=3)], keywords=[], starargs=None, kwargs=None), body=[Print(dest=None, values=[Name(id='i', ctx=Load())], nl=True)], orelse=[]), Print(dest=None, values=[Name(id='i', ctx=Load())], nl=True)], orelse=[]), Print(dest=None, values=[Name(id='i', ctx=Load())], nl=True)])
***** case 1.in *****
***** case 2.in ***** pass
Module(body=[Assign(targets=[Name(id='x', ctx=Store())], value=Num(n=3)), Assign(targets=[Name(id='y', ctx=Store())], value=BinOp(left=Num(n=4), op=Add(), right=Name(id='x', ctx=Load()))), Assign(targets=[Name(id='x', ctx=Store())], value=BinOp(left=Num(n=2), op=Add(), right=Num(n=1))), Print(dest=None, values=[BinOp(left=UnaryOp(op=USub(), operand=Name(id='x', ctx=Load())), op=Add(), right=Name(id='y', ctx=Load()))], nl=True), Assign(targets=[Name(id='i', ctx=Store())], value=Num(n=5)), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Name(id='y', ctx=Load()))], keywords=[], starargs=None, kwargs=None), body=[Print(dest=None, values=[BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Name(id='x', ctx=Load())), Name(id='i', ctx=Load())], nl=True)], orelse=[]), Assign(targets=[Name(id='s', ctx=Store())], value=Num(n=0)), For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Num(n=10)], keywords=[], starargs=None, kwargs=None), body=[Assign(targets=[Name(id='s', ctx=Store())], value=BinOp(left=Name(id='s', ctx=Load()), op=Add(), right=Name(id='j', ctx=Load())))], orelse=[]), Print(dest=None, values=[Name(id='s', ctx=Load()), Name(id='j', ctx=Load()), Name(id='y', ctx=Load())], nl=True)])
***** case 2 *****
***** case 3 ***** pass
Module(body=[Assign(targets=[Name(id='apple', ctx=Store())], value=Num(n=2)), Assign(targets=[Name(id='pear', ctx=Store())], value=Compare(left=Num(n=3), ops=[Lt(), Gt(), NotEq()], comparators=[Num(n=2), Num(n=4), Num(n=5)])), If(test=Compare(left=Num(n=3), ops=[Gt()], comparators=[Num(n=2)]), body=[Assign(targets=[Name(id='apple', ctx=Store())], value=Num(n=5)), Print(dest=None, values=[Name(id='apple', ctx=Load()), Name(id='pear', ctx=Load())], nl=True)], orelse=[]), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='apple', ctx=Load())], keywords=[], starargs=None, kwargs=None), body=[Assign(targets=[Name(id='apple', ctx=Store())], value=BinOp(left=Name(id='apple', ctx=Load()), op=Add(), right=Num(n=1))), Print(dest=None, values=[Name(id='apple', ctx=Load())], nl=True)], orelse=[]), Print(dest=None, values=[Name(id='i', ctx=Load()), Name(id='apple', ctx=Load())], nl=True), Assign(targets=[Name(id='banana', ctx=Store())], value=IfExp(test=Compare(left=Name(id='apple', ctx=Load()), ops=[Gt()], comparators=[Num(n=2)]), body=Num(n=3), orelse=Num(n=7))), Assign(targets=[Name(id='carrot', ctx=Store())], value=IfExp(test=IfExp(test=Compare(left=Name(id='banana', ctx=Load()), ops=[Gt()], comparators=[Name(id='apple', ctx=Load())]), body=Name(id='True', ctx=Load()), orelse=Name(id='False', ctx=Load())), body=Num(n=13), orelse=Num(n=11))), Print(dest=None, values=[Name(id='apple', ctx=Load()), Name(id='banana', ctx=Load()), Name(id='carrot', ctx=Load())], nl=True)])
***** case 3 *****
***** case 4 *****
Module(body=[Assign(targets=[Name(id='apple', ctx=Store())], value=Num(n=7)), Assign(targets=[Name(id='pear', ctx=Store())], value=Name(id='True', ctx=Load())), Assign(targets=[Name(id='banana', ctx=Store())], value=Num(n=9)), Assign(targets=[Name(id='carrot', ctx=Store())], value=Num(n=0)), Assign(targets=[Name(id='doughnut', ctx=Store())], value=BinOp(left=BinOp(left=Num(n=-7), op=Add(), right=Num(n=5)), op=Add(), right=Num(n=12))), If(test=Compare(left=Num(n=1), ops=[Lt(), Lt(), Lt(), Lt()], comparators=[Name(id='banana', ctx=Load()), Name(id='apple', ctx=Load()), Num(n=7), BinOp(left=Num(n=16), op=Add(), right=Num(n=9))]), body=[Assign(targets=[Name(id='doughnut', ctx=Store())], value=BinOp(left=Name(id='doughnut', ctx=Load()), op=Add(), right=IfExp(test=BoolOp(op=Or(), values=[Compare(left=Name(id='carrot', ctx=Load()), ops=[GtE()], comparators=[Num(n=12)]), Compare(left=Num(n=-3), ops=[LtE()], comparators=[Num(n=6)])]), body=Num(n=9), orelse=Num(n=5)))), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='carrot', ctx=Load()), ops=[Lt()], comparators=[Num(n=100)]), Name(id='pear', ctx=Load())]), body=[Assign(targets=[Name(id='carrot', ctx=Store())], value=BinOp(left=Name(id='doughnut', ctx=Load()), op=Add(), right=Num(n=1)))], orelse=[])], orelse=[]), Print(dest=None, values=[Name(id='carrot', ctx=Load()), Name(id='doughnut', ctx=Load())], nl=True), Print(dest=None, values=[Compare(left=Num(n=3), ops=[Lt(), Gt()], comparators=[Name(id='apple', ctx=Load()), Num(n=2)]), Compare(left=UnaryOp(op=USub(), operand=Name(id='apple', ctx=Load())), ops=[NotEq()], comparators=[BinOp(left=Name(id='banana', ctx=Load()), op=Add(), right=Num(n=8))])], nl=True)])

Module(body=[Assign(targets=[Name(id='apple', ctx=Store())], value=Num(n=7)), Assign(targets=[Name(id='pear', ctx=Store())], value=Name(id='True', ctx=Load())), Assign(targets=[Name(id='banana', ctx=Store())], value=Num(n=9)), Assign(targets=[Name(id='carrot', ctx=Store())], value=Num(n=0)), Assign(targets=[Name(id='doughnut', ctx=Store())], value=BinOp(left=BinOp(left=Num(n=-7), op=Add(), right=Num(n=5)), op=Add(), right=Num(n=12))), If(test=Compare(left=Num(n=1), ops=[Lt(), Lt(), Lt(), Lt()], comparators=[Name(id='banana', ctx=Load()), Name(id='apple', ctx=Load()), Num(n=7), BinOp(left=Num(n=16), op=Add(), right=Num(n=9))]), body=[Assign(targets=[Name(id='doughnut', ctx=Store())], value=BinOp(left=Name(id='doughnut', ctx=Load()), op=Add(), right=BoolOp(op=Or(), values=[Compare(left=Name(id='carrot', ctx=Load()), ops=[GtE()], comparators=[Num(n=12)]), Compare(left=Num(n=-3), ops=[LtE()], comparators=[Num(n=6)])]))), If(test=BoolOp(op=And(), values=[Compare(left='carrot', ops=[Lt()], comparators=[Num(n=100)]), 'pear']), body=[Assign(targets=[Name(id='carrot', ctx=Store())], value=BinOp(left=Name(id='doughnut', ctx=Load()), op=Add(), right=Num(n=1)))], orelse=[])], orelse=[]), Print(dest=None, values=[Name(id='carrot', ctx=Load()), Name(id='doughnut', ctx=Load())], nl=True), Print(dest=None, values=[Name(id=Compare(left=Num(n=3), ops=[Lt()], comparators=[Compare(left='apple', ops=[Gt()], comparators=[Num(n=2)])]), ctx=Load()), Name(id=Compare(left=UnaryOp(op=USub(), operand=Name(id='apple', ctx=Load())), ops=[NotEq()], comparators=[BinOp(left=Name(id='banana', ctx=Load()), op=Add(), right=Num(n=8))]), ctx=Load())], nl=True)])
***** case 4 *****
***** case 5 ***** half pass
Module(body=[Assign(targets=[Name(id='apple', ctx=Store())], value=Num(n=42)), Assign(targets=[Name(id='pear', ctx=Store())], value=Name(id='False', ctx=Load())), Assign(targets=[Name(id='banana', ctx=Store())], value=Num(n=9)), Assign(targets=[Name(id='carrot', ctx=Store())], value=Num(n=0)), Assign(targets=[Name(id='doughnut', ctx=Store())], value=Num(n=-6)), Assign(targets=[Name(id='sum_0', ctx=Store())], value=Num(n=0)), Assign(targets=[Name(id='sum_1', ctx=Store())], value=Num(n=0)), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[IfExp(test=UnaryOp(op=Not(), operand=Name(id='pear', ctx=Load())), body=BinOp(left=Num(n=-3), op=Add(), right=Num(n=6)), orelse=Num(n=0))], keywords=[], starargs=None, kwargs=None), body=[Assign(targets=[Name(id='sum_0', ctx=Store())], value=BinOp(left=Name(id='sum_0', ctx=Load()), op=Add(), right=Name(id='i', ctx=Load()))), Assign(targets=[Name(id='sum_1', ctx=Store())], value=IfExp(test=BoolOp(op=Or(), values=[Compare(left=Name(id='i', ctx=Load()), ops=[NotEq()], comparators=[Name(id='apple', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='pear', ctx=Load()))]), body=BinOp(left=Name(id='sum_1', ctx=Load()), op=Add(), right=Name(id='i', ctx=Load())), orelse=UnaryOp(op=USub(), operand=Name(id='sum_1', ctx=Load())))), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='sum_1', ctx=Load())], keywords=[], starargs=None, kwargs=None), body=[For(target=Name(id='sum_1', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='sum_0', ctx=Load())], keywords=[], starargs=None, kwargs=None), body=[Assign(targets=[Name(id='sum_0', ctx=Store())], value=BinOp(left=Name(id='sum_0', ctx=Load()), op=Add(), right=Name(id='sum_1', ctx=Load())))], orelse=[])], orelse=[]), Print(dest=None, values=[Name(id='sum_0', ctx=Load()), IfExp(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='pear', ctx=Load())), Compare(left=Name(id='apple', ctx=Load()), ops=[Lt()], comparators=[Num(n=30)])]), body=Name(id='sum_1', ctx=Load()), orelse=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Name(id='sum_1', ctx=Load())))], nl=True), Assign(targets=[Name(id='pear', ctx=Store())], value=UnaryOp(op=Not(), operand=Name(id='pear', ctx=Load())))], orelse=[])])
***** case 5 *****